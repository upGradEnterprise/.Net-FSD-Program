Day39 (3rd Sept, 2025)
~~~~~~~~~~~~~~~~~~~~~~~


Components   ---		Single Responsibility Principle 

--> 


import EmpList from "./components/EmpList";


Event Handling in JavaScript:	
	a.   Define the function /  event handler
	b.   Invoke the function in event 		
			<button onclick="buttonClick()">Click Me</button>
			
			
Event Handling in React:	
	a.   Define the function /  event handler within Component
	b.   Invoke the function in event 		
			<button onClick={buttonClick}>Click Me</button>	
	



HTML Forms
~~~~~~~~~~~~

---> Regular approach   Reload / Redirect


	action ---  current URL
	method --   GET 

<form  >


	<input type="submit"  value="Login"  />
</form>



In React:


	function handleSubmit(event)
	{
		event.preventDefault();
		
		// code to handle the data
		// validate and submit to api by making ajax calls		
	}
	

	<form  onSubmit={handleSubmit}>
		......
		<input type="submit"  value="Login"  />
</form>



------------------------

  <h3>Passing Parameters to Event Handlers</h3>
              
	<button onClick={ () => handleDeleteClick(10)  }>Delete</button>
	<button onClick={ () => handleDeleteClick(productId)  }>Delete</button>
	<button onClick={ () => handleDeleteClick(item.productId)  }>Delete</button>


---------------------------------


Working with State in React
~~~~~~~~~~~~~~~~~~~~~~~~~~~

import {useState}  from 'React';



Syntax:  		const  [stateVariable,  setFunction]  =  useState(InitialValue);
Eg:  				const  [count,  setCount]  =  useState(0);


	const  [count,  setCount]  =  useState(0);
	const  [uname,  setUname]  =  useState("");
	const  [empObj,  setEmpObj]  =  useState( {} );
	const  [skillSetArray,  setSkillSetArray]  =  useState( []  );
	
	
	const  [skillSetArray,  setSkillSetArray]  =  useState( ["HTML","CSS"]  );
	
	
	
	
	
	
Updating state in textbox onChange event:


	
	<input type="text" onChange={(event) => setUsername(event.target.value)}
	
	
	 
	 
	 const [username, setUsername] = useState("");   
     const [password, setPassword] = useState("");
	
	
	
	
	
 const [user, setUser] = useState({ 
					name: "",
					age: 0,
					location: ""  
			});
	
	
	
	
	
		<input   type="text"  onChange={(event) => setUser({...user,   name:  event.target.value})   }   />
		
		<input   type="text"  onChange={(event) => setUser({...user,   age:  event.target.value})   }   />
	
	
	
	
	
	
	
	
	
	
	
